pipeline {
    agent any

    stages {
        stage('Checkout') {
            steps {
                checkout([
                    $class: 'GitSCM',
                    branches: [[name: '*/main']],
                    doGenerateSubmoduleConfigurations: false,
                    extensions: [[$class: 'CleanBeforeCheckout']],
                    submoduleCfg: [],
                    userRemoteConfigs: [[url: 'https://github.com/Shadan-debug/Calculator.git']]
                ])
            }
        }
        
        stage('Verify Files') {
            steps {
                // List files to confirm package.json exists
                bat 'dir'
            }
        }

        stage('Build') {
            environment {
                // Add npm to PATH if necessary
                PATH = "$PATH:C:\\Program Files\\nodejs"
            }
            steps {
                echo 'Building...'
                bat 'npm install'
            }
        }

        stage('Test') {
            when {
                expression { currentBuild.resultIsBetterOrEqualTo('SUCCESS') }
            }
            steps {
                echo 'Running tests...'
                bat 'npm test'
            }
        }

        stage('Integration Test') {
            when {
                expression { currentBuild.resultIsBetterOrEqualTo('SUCCESS') }
            }
            steps {
                echo 'Running integration tests...'
                // Add integration test command here
            }
        }

        stage('E2E Tests') {
            when {
                expression { currentBuild.resultIsBetterOrEqualTo('SUCCESS') }
            }
            steps {
                echo 'Running E2E tests...'
                // Add E2E test command here
            }
        }

        stage('Deploy') {
            when {
                expression { currentBuild.resultIsBetterOrEqualTo('SUCCESS') }
            }
            steps {
                echo 'Deploying application...'
                // Add deployment command here
            }
        }
    }

    post {
        always {
            echo 'Pipeline finished.'
        }
        failure {
            echo 'Pipeline failed.'
        }
    }
}
